{"version":3,"file":"cli.js","sources":["../src/lib/patch.js","../src/lib/util.js","../src/cli.js"],"sourcesContent":["import chalk from 'chalk';\n\nlet { write } = process.stdout;\nprocess.stdout.write = (msg) => {\n\t// Strip + prettify console forwarded output:\n\tlet matches = msg.match(/^LOG\\s*([A-Z]+): ([\\s\\S]*)$/);\n\n\t// \"min\" reporter has slightly different output\n\tif (!matches) {\n\t\tmatches = msg.match(/^(LOG): ([\\s\\S]*)$/);\n\t}\n\n\tif (matches) {\n\t\tmsg =\n\t\t\tchalk.bgBlueBright.white(' ' + matches[1] + ': ') +\n\t\t\t' ' +\n\t\t\tchalk.blue(matches[2]);\n\t}\n\n\t// Strip browser prefix from the output since there's only one:\n\tif (msg.match(/^[\\n\\s]*HeadlessChrome/)) {\n\t\tlet color = /\\bSUCCESS\\b/.test(msg) ? 'greenBright' : 'magenta';\n\t\tmsg = chalk[color](msg.replace(/^[\\n\\s]*.*?: /g, ''));\n\t}\n\n\t// Ignore total output since we only have one browser:\n\t// eslint-disable-next-line no-control-regex\n\tif (msg.match(/\\u001b\\[32mTOTAL: /)) return;\n\n\treturn write.call(process.stdout, msg);\n};\n","import fs from 'fs';\nimport path from 'path';\nimport chalk from 'chalk';\nimport { createCodeFrame } from 'simple-code-frame';\nimport { parseStackTrace } from 'errorstacks';\n\nconst cwd = process.cwd();\nexport const res = (file) => path.resolve(cwd, file);\n\nexport function moduleDir(name) {\n\tlet file = require.resolve(name),\n\t\tfind = `${path.sep}node_modules${path.sep}${name}`,\n\t\tindex = file.indexOf(find);\n\treturn file.substring(0, index + find.length);\n}\n\nexport function fileExists(file) {\n\ttry {\n\t\treturn fs.statSync(file).isFile();\n\t} catch (e) {}\n\treturn false;\n}\n\nexport function readFile(file) {\n\ttry {\n\t\treturn fs.readFileSync(file, 'utf8');\n\t} catch (e) {}\n}\n\nexport function readDir(file) {\n\ttry {\n\t\treturn fs.readdirSync(file);\n\t} catch (e) {}\n}\n\nexport function tryRequire(file) {\n\tif (fileExists(file)) return require(file);\n}\n\nexport function dedupe(value, index, arr) {\n\treturn arr.indexOf(value) === index;\n}\n\nexport function indent(str, level) {\n\tconst space = ' '.repeat(level);\n\treturn str\n\t\t.split('\\n')\n\t\t.map((line) => space + line)\n\t\t.join('\\n');\n}\n\n/**\n * Colorize a pre-formatted code frame\n * @param {string} str\n */\nexport function highlightCodeFrame(str) {\n\treturn str\n\t\t.split('\\n')\n\t\t.map((line) => {\n\t\t\tif (/^>\\s(.*)/.test(line)) {\n\t\t\t\treturn line.replace(/^>(.*)/, (_, content) => {\n\t\t\t\t\treturn chalk.bold.redBright('>') + chalk.white(content);\n\t\t\t\t});\n\t\t\t} else if (/^\\s+\\|\\s+\\^/.test(line)) {\n\t\t\t\treturn line\n\t\t\t\t\t.replace('|', chalk.dim('|'))\n\t\t\t\t\t.replace('^', chalk.bold.redBright('^'));\n\t\t\t}\n\t\t\treturn chalk.dim(line);\n\t\t})\n\t\t.join('\\n');\n}\n\nexport function cleanStack(str, cwd = process.cwd()) {\n\tstr = str.replace(/^[\\s\\S]+\\n\\n([A-Za-z]*Error: )/g, '$1');\n\n\tlet stack = str.replace(\n\t\tnew RegExp(\n\t\t\t`( |\\\\()(https?:\\\\/\\\\/localhost:\\\\d+\\\\/base\\\\/|webpack:///|${cwd.replace(\n\t\t\t\t/([\\\\/[\\]()*+$!^.,?])/g,\n\t\t\t\t'\\\\$1'\n\t\t\t)}\\\\/*)?([^\\\\s():?]*?)(?:\\\\?[a-zA-Z0-9]+?)?(:\\\\d+(?::\\\\d+)?)`,\n\t\t\t'g'\n\t\t),\n\t\treplacer\n\t);\n\n\tlet frames = parseStackTrace(stack);\n\n\t// Some frameworks mess with the stack. Use a simple heuristic\n\t// to find the beginning of the proper stack.\n\tlet message = stack;\n\tif (frames.length) {\n\t\tlet lines = stack.split('\\n');\n\t\tlet stackStart = lines.indexOf(frames[0].raw);\n\t\tif (stackStart > 0) {\n\t\t\tmessage = lines\n\t\t\t\t.slice(0, stackStart)\n\t\t\t\t.map((s) => s.trim())\n\t\t\t\t.join('\\n');\n\t\t}\n\t}\n\n\t/**\n\t * The nearest location where the user's code triggered the error.\n\t * @type {import('errorstacks').StackFrame}\n\t */\n\tlet nearestFrame;\n\n\tstack = frames\n\t\t.filter((frame) => frame.type !== 'native' || frame.name !== 'Jasmine')\n\t\t.map((frame) => {\n\t\t\t// Only show frame for errors in the user's code\n\t\t\tif (\n\t\t\t\t!nearestFrame &&\n\t\t\t\t!/node_modules/.test(frame.fileName) &&\n\t\t\t\tframe.type !== 'native'\n\t\t\t) {\n\t\t\t\tnearestFrame = frame;\n\t\t\t}\n\n\t\t\t// Native traces don't have an error location\n\t\t\tif (!frame.name || frame.type === 'native') {\n\t\t\t\treturn chalk.gray(frame.raw.trim());\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\tsourceFileName,\n\t\t\t\tcolumn,\n\t\t\t\tfileName,\n\t\t\t\tline,\n\t\t\t\tname,\n\t\t\t\tsourceColumn,\n\t\t\t\tsourceLine,\n\t\t\t} = frame;\n\n\t\t\tconst loc = chalk.cyanBright(`${fileName}:${line}:${column}`);\n\t\t\tconst originalLoc =\n\t\t\t\tsourceFileName !== ''\n\t\t\t\t\t? chalk.gray(' <- ') +\n\t\t\t\t\t  chalk.gray(`${sourceFileName}:${sourceLine}:${sourceColumn}`)\n\t\t\t\t\t: '';\n\t\t\treturn chalk.gray(`at ${name} (${loc}${originalLoc})`);\n\t\t})\n\t\t.join('\\n');\n\n\tlet codeFrame = '';\n\tif (nearestFrame) {\n\t\ttry {\n\t\t\tconst { fileName, line, column } = nearestFrame;\n\t\t\tif (fileName) {\n\t\t\t\tconst content = fs.readFileSync(fileName, 'utf-8');\n\t\t\t\tcodeFrame = createCodeFrame(content, line - 1, column - 1, {\n\t\t\t\t\tbefore: 2,\n\t\t\t\t\tafter: 2,\n\t\t\t\t});\n\t\t\t\tcodeFrame = highlightCodeFrame(codeFrame);\n\t\t\t\tcodeFrame = indent(codeFrame, 2) + '\\n';\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log('INTERNAL WARNING: Failed to read stack frame code: ' + err);\n\t\t}\n\t}\n\n\tmessage = indent(chalk.reset(message), 2);\n\treturn `\\n${message}\\n\\n${codeFrame}${indent(stack, 4)}\\n`;\n}\n\nfunction replacer(str, before, root, filename, position) {\n\treturn before + './' + filename + position;\n}\n","#!/usr/bin/env node\n\nimport sade from 'sade';\nimport chalk from 'chalk';\nimport './lib/patch';\nimport karmatic from '.';\nimport { cleanStack } from './lib/util';\n\n// @ts-ignore\nconst { version } = require('../package.json');\n\nlet toArray = (val) =>\n\ttypeof val === 'string'\n\t\t? val.split(/\\s*,\\s*/)\n\t\t: val == null\n\t\t? []\n\t\t: [].concat(val);\n\nlet prog = sade('karmatic');\n\nprog\n\t.version(version)\n\t.option('--files', 'Minimatch pattern for test files')\n\t.option('--headless', 'Run using Chrome Headless', true)\n\t.option('--coverage', 'Report code coverage of tests', true)\n\t.option('--downlevel', 'Downlevel syntax to ES5')\n\t.option('--chromeDataDir', 'Save Chrome preferences');\n\nprog\n\t.command('run [...files]', '', { default: true })\n\t.describe('Run tests once and exit')\n\t.option('--watch', 'Enable watch mode (alias: karmatic watch)', false)\n\t.action(run);\n\nprog\n\t.command('watch [...files]')\n\t.describe('Run tests on any change')\n\t.action((str, opts) => run(str, opts, true));\n\nprog\n\t.command('debug [...files]')\n\t.describe('Open a headful Puppeteer instance for debugging your tests')\n\t.option('--headless', 'Run using Chrome Headless', false) // Override default to false\n\t.option('--browsers', 'Run in specific browsers', null)\n\t.option('--coverage', 'Report code coverage of tests', false) // Override default to false\n\t.action((str, opts) => run(str, opts, true));\n\nprog.parse(process.argv);\n\nfunction run(str, opts, isWatch) {\n\topts.watch = opts.watch === true || isWatch === true;\n\topts.files = toArray(str || opts.files).concat(opts._);\n\tconst b = opts.browsers || opts.browser;\n\topts.browsers = b ? toArray(b) : null;\n\tkarmatic(opts)\n\t\t.then((output) => {\n\t\t\tif (output != null) process.stdout.write(output + '\\n');\n\t\t\tif (!opts.watch) process.exit(0);\n\t\t})\n\t\t.catch((err) => {\n\t\t\tif (!(typeof err.code === 'number' && err.code >= 0 && err.code < 10)) {\n\t\t\t\tprocess.stderr.write(\n\t\t\t\t\tchalk.red(cleanStack((err && (err.stack || err.message)) || err)) +\n\t\t\t\t\t\t'\\n'\n\t\t\t\t);\n\t\t\t}\n\t\t\tprocess.exit(typeof err.code == 'number' ? err.code : 1);\n\t\t});\n}\n"],"names":["write","process","stdout","msg","matches","match","chalk","bgBlueBright","white","blue","color","test","replace","call","cwd","indent","str","level","space","repeat","split","map","line","join","highlightCodeFrame","_","content","bold","redBright","dim","cleanStack","stack","RegExp","replacer","frames","parseStackTrace","message","length","lines","stackStart","indexOf","raw","slice","s","trim","nearestFrame","filter","frame","type","name","fileName","gray","sourceFileName","column","sourceColumn","sourceLine","loc","cyanBright","originalLoc","codeFrame","fs","readFileSync","createCodeFrame","before","after","err","console","log","reset","root","filename","position","version","require","toArray","val","concat","prog","sade","option","command","default","describe","action","run","opts","parse","argv","isWatch","watch","files","b","browsers","browser","karmatic","then","output","exit","catch","code","stderr","red"],"mappings":"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"}